{"version":3,"file":"static/js/541.9337e808.chunk.js","mappings":"0RACA,EAAiC,iCAAjC,EAAmF,iC,mBCiEnF,EA3DiB,WACf,IAAMA,EAAO,kEAFF,oCAIX,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,2FACpBJ,GAAa,GADO,kBAGKK,EAAAA,EAAAA,IAAUV,GAHf,OAIM,OADlBW,EAHY,QAILC,OACXT,EAAkBQ,EAASE,KAAKC,SAEhCP,EAAS,uCAPO,gDAUlBA,EAAS,KAAIQ,SAVK,QAYpBV,GAAa,GAZO,yDAAH,qDAcnBI,GACD,GAAE,CAACT,IAEAM,GACK,2BAAK,UAAQA,MAGpB,0BACGF,GACC,SAACY,EAAA,EAAD,KAEA,UAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAFvD,WAIE,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAAyB,yBAE3B,eAAIC,UAAWC,EAAf,SACG1B,EAAe2B,KAAI,SAAAC,GAAK,OACvB,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAA3B,WACE,gBACEC,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAI,YAEN,uBAAIL,EAAMM,YANLN,EAAME,GADQ,UAgBpC,C","sources":["webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trending__list\":\"HomePage_trending__list__0uhwH\",\"trending__card\":\"HomePage_trending__card__h1jCO\"};","import { Box, Container, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport css from './HomePage.module.css';\nimport { Loader } from 'components/Loader/Loader';\nconst API_KEY = `5576770c01d63e1242c2c0a47f8d9a02`;\nconst HomePage = () => {\n  const API_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(API_URL);\n        if (response.status === 200) {\n          setTrendingMovies(response.data.results);\n        } else {\n          setError('There was an error with fetching...');\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    fetchTrending();\n  }, [API_URL]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n  return (\n    <main>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Container\n          maxWidth\n          sx={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n        >\n          <Box mt={6}>\n            <Typography variant=\"h4\">Trending today...</Typography>\n          </Box>\n          <ul className={css['trending__list']}>\n            {trendingMovies.map(movie => (\n              <li key={movie.id} className={css['trending__card']}>\n                <Link to={`/movies/${movie.id}`}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt=\"Poster\"\n                  />\n                  <p>{movie.title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Container>\n      )}\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["API_URL","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrending","axios","response","status","data","results","message","Loader","Container","maxWidth","sx","display","flexDirection","gap","Box","mt","Typography","variant","className","css","map","movie","to","id","src","poster_path","alt","title"],"sourceRoot":""}